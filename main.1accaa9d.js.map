{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","newMessage","document","createElement","classList","add","innerText","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,WAClCE,EAAQ,UAAUF,OAAAA,GACKD,mBAAAA,OAAAA,EAAQM,SAAeN,QAAAA,OAAAA,EAAQO,SAM5D,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAaC,SAASC,cAAc,OAE1CF,EAAWG,UAAUC,IAAI,WACzBJ,EAAWK,UAAYN,EAEvBE,SAASK,KAAKC,YAAYP,IAG5BQ,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.1accaa9d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName}`\n        + `on the element: ${element.nodeName} id:${element.id}`\n      );\n    });\n  });\n};\n\nconst printMessage = (message) => {\n  const newMessage = document.createElement('div');\n\n  newMessage.classList.add('message');\n  newMessage.innerText = message;\n\n  document.body.appendChild(newMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}